import numpy as np
import tensorflow as tf
import cv2
from PIL import Image


# from model import darknet
# from detect_ops import decode
# from utils import preprocess_image, postprocess, draw_detection


def preprocess_image(image, image_size=(416, 416)):
    """Preprocess a image to inference"""
    image_cp = np.copy(image).astype(np.float32)

    # resize the image
    image_rgb = cv2.cvtColor(image_cp, cv2.COLOR_BGR2RGB)
    image_resized = cv2.resize(image_rgb, image_size)

    # normalize
    image_normalized = image_resized.astype(np.float32) / 255.0
    # expand the batch_size dim
    # 1, 416, 416, 3
    image_expanded = np.expand_dims(image_normalized, axis=0)
    return image_expanded


def darknet():
    return 1


if __name__ == '__main__':
    input_size = (416, 416)
    image_file = "0001.jpg"
    image = cv2.imread(image_file)

    image_shape = image.shape[:2]
    # for test
    # image_cp = preprocess_image(image, input_size)
    # image = Image.open(image_file)
    # image_cp = image.resize(input_size, Image.BICUBIC)
    # image_cp = np.array(image_cp, dtype=np.float32)/255.0
    # image_cp = np.expand_dims(image_cp, 0)
    # print(image_cp)
    # cv2.waitKey(0)
